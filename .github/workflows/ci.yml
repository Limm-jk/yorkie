name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go_version:
          - '1.18'
        os: [ macos-latest, ubuntu-latest, windows-latest ]

    steps:

    - name: Set up Go {{ matrix.go_version }}
      uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go_version }}

    - name: Setup buf action
      uses: bufbuild/buf-setup-action@v1

    - name: Check out code
      uses: actions/checkout@v3

    - name: Get tools dependencies
      run: make tools

    - name: Lint
      run: make lint

    - name: Lint proto files
      uses: bufbuild/buf-lint-action@v1

    - name: Build
      run: make build

    - name: Stack
      run: docker-compose -f docker/docker-compose.yml up --build -d

    - name: Test
      run: go test -tags integration -race -coverprofile=coverage.txt -covermode=atomic -v ./...

    - name: Bench
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: make bench

    - name: Download previous benchmark data
      if: ${{ matrix.os == 'ubuntu-latest' }}
      uses: actions/cache@v1
      with:
        path: ./cache
        key: ${{ runner.os }}-benchmark

    - name: Store benchmark result
      uses: benchmark-action/github-action-benchmark@v1
      if: ${{ github.event.pull_request.head.repo.full_name == github.repository && matrix.os == 'ubuntu-latest'}}
      with:
        name: Go Benchmark
        tool: 'go'
        output-file-path: output.txt
        external-data-json-path: ./cache/benchmark-data.json
        fail-on-alert: false
        github-token: ${{ secrets.GITHUB_TOKEN }}
        comment-always: true

    - name: Upload coverage to Codecov
      if: ${{ matrix.os == 'ubuntu-latest' }}
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.txt
